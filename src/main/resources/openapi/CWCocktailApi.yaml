openapi: 3.0.0
info:
  title: CWCocktailAPI
  description:
    <span>This is the specification of an open source cocktail api.</span>
    <br>
    <br>
    <h4>Every getter is free to use.</h4>
    <br>
    <span>New cocktails are added by the owner at the moment. Feel free to propose a new cocktail via a github comment.</span>
    <br>
    <br>
    <span>In a future release it could be possible that other user can add cocktails.</span> <br>
  version: 0.0.0.1
paths:
  /cocktails:
    get:
      tags:
        - cocktail
      summary: List of all cocktails. Filter are possible.
      parameters:
        - $ref: '#/components/parameters/filterCocktailsByNames'
        - $ref: '#/components/parameters/filterCocktailsByCategories'
        - $ref: '#/components/parameters/filterCocktailsByIngredients'
        - $ref: '#/components/parameters/filterCocktailsByIngredientCategories'
        - $ref: '#/components/parameters/filterCocktailsByRatingGte'
        - $ref: '#/components/parameters/filterCocktailsByRatingLte'
        - $ref: '#/components/parameters/filterCocktailsByGlass'
        - $ref: '#/components/parameters/randomCocktails'
      responses:
        200:
          $ref: '#/components/responses/200Cocktails'
        204:
          $ref: '#/components/responses/204List'
        406:
          $ref: '#/components/responses/406Cocktails'
  /cocktails/{cocktailId}:
    parameters:
      - $ref: '#/components/parameters/cocktailId'
    get:
      tags:
        - cocktail
      summary: Get a cocktail by id
      responses:
        200:
          $ref: '#/components/responses/200Cocktail'
        404:
          $ref: '#/components/responses/404CocktailId'
  /cocktails/{cocktailId}/cocktail_ingredients:
    parameters:
      - $ref: '#/components/parameters/cocktailId'
    get:
      tags:
        - cocktail ingredient
      summary: All needed cocktail ingredients
      responses:
        200:
          $ref: '#/components/responses/200CocktailIngredients'
        204:
          $ref: '#/components/responses/204List'
        404:
          $ref: '#/components/responses/404CocktailId'
  /cocktail_ingredients/{cocktailIngredientId}:
    parameters:
      - $ref: '#/components/parameters/cocktailIngredientId'
    get:
      tags:
        - cocktail ingredient
      summary: Get a cocktail ingredient by id
      responses:
        200:
          $ref: '#/components/responses/200CocktailIngredient'
        404:
          $ref: '#/components/responses/404CocktailIngredientId'
  /cocktail_ingredients/{cocktailIngredientId}/ingredient:
    parameters:
      - $ref: '#/components/parameters/cocktailIngredientId'
    get:
      tags:
        - ingredient
      summary: Specific ingrdient
      responses:
        200:
          $ref: '#/components/responses/200Ingredient'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404CocktailIngredientId'
  /cocktail_ingredients/{cocktailIngredientId}/alternative_ingredients:
    parameters:
      - $ref: '#/components/parameters/cocktailIngredientId'
    get:
      tags:
        - ingredient
      summary: All alternative ingredients. Selected by ingreident categories.
      responses:
        200:
          $ref: '#/components/responses/200Ingredients'
        204:
          $ref: '#/components/responses/204List'
        404:
          $ref: '#/components/responses/404CocktailIngredientId'
  /ingredients:
    get:
      tags:
        - ingredient
      summary: List of all ingredients
      responses:
        200:
          description: |-
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredients'
        204:
          $ref: '#/components/responses/204List'
  /ingredients/{ingredientId}:
    parameters:
      - $ref: '#/components/parameters/ingredientId'
    get:
      tags:
        - ingredient
      summary: Get a ingredient by id
      responses:
        200:
          $ref: '#/components/responses/200Ingredient'
        404:
          $ref: '#/components/responses/404IngredientId'
  /cocktails/{cocktailId}/making_steps:
    parameters:
      - $ref: '#/components/parameters/cocktailId'
    get:
      tags:
        - making step
      summary: Get the making steps
      responses:
        200:
          $ref: '#/components/responses/200MakingSteps'
        204:
          $ref: '#/components/responses/204List'
        404:
          $ref: '#/components/responses/404CocktailId'
  /cocktails/{cocktailId}/image:
    parameters:
      - $ref: '#/components/parameters/cocktailId'
    get:
      tags:
        - image
      summary: Get the image of the cocktail
      responses:
        200:
          $ref: '#/components/responses/200Image'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404CocktailId'
  /ingredients/{ingredientId}/image:
    parameters:
      - $ref: '#/components/parameters/ingredientId'
    get:
      tags:
        - image
      summary: Get the image of the ingredient
      responses:
        200:
          $ref: '#/components/responses/200Image'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404IngredientId'
  /cocktails/{cocktailId}/rating:
    parameters:
      - $ref: '#/components/parameters/cocktailId'
    get:
      tags:
        - rating
      summary: Get the rating for the cocktail
      responses:
        200:
          $ref: '#/components/responses/200Rating'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404CocktailId'
  /ingredients/{ingredientId}/rating:
    parameters:
      - $ref: '#/components/parameters/ingredientId'
    get:
      tags:
        - rating
      summary: Get the rating for the ingredient
      responses:
        200:
          $ref: '#/components/responses/200Rating'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404IngredientId'
  /cocktails/{cocktailId}/glass:
    parameters:
      - $ref: '#/components/parameters/cocktailId'
    get:
      tags:
        - glass
      summary: Get the glass for the cocktail
      responses:
        200:
          $ref: '#/components/responses/200Glass'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404CocktailId'
  /glasses:
    get:
      tags:
        - glass
      summary: List of all glasses
      responses:
        200:
          $ref: '#/components/responses/200Glasses'
        204:
          $ref: '#/components/responses/204List'
  /cocktail_ingredients/{cocktailIngredientId}/unit:
    parameters:
      - $ref: '#/components/parameters/cocktailIngredientId'
    get:
      tags:
        - unit
      summary: Get the unit of the cocktail ingredient
      responses:
        200:
          $ref: '#/components/responses/200Unit'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404CocktailIngredientId'
  /units:
    get:
      tags:
        - unit
      summary: List of all units
      responses:
        200:
          $ref: '#/components/responses/200Units'
        204:
          $ref: '#/components/responses/204List'
  /cocktails/{cocktailId}/category:
    parameters:
      - $ref: '#/components/parameters/cocktailId'
    get:
      tags:
        - category
      summary: Cocktail category
      responses:
        200:
          $ref: '#/components/responses/200CocktailCategory'
        204:
          $ref: '#/components/responses/204Object'
        404:
          $ref: '#/components/responses/404CocktailId'
  /ingredients/{ingredientId}/categories:
    parameters:
      - $ref: '#/components/parameters/ingredientId'
    get:
      tags:
        - category
      summary: Ingredient categories
      responses:
        200:
          $ref: '#/components/responses/200IngredientsCategories'
        204:
          $ref: '#/components/responses/204List'

components:
  schemas:
    Cocktails:
      type: array
      items:
        $ref: '#/components/schemas/Cocktail'
    Cocktail:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          example:
            Whiskey Sour
        description:
          type: string
          example: Thereâ€™s a simple structure behind all sours, a family of citrus-based cocktails.
        created:
          $ref: '#/components/schemas/DateTime'
        updated:
          $ref: '#/components/schemas/DateTime'
    Glass:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          $ref: '#/components/schemas/GlassType'
    Image:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        raw:
          $ref: '#/components/schemas/StringBase64'
        filename:
          type: string
          example: wiskey_sour
        extension:
          type: string
          example: png
    Rating:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        stars:
          type: integer
          example: 5
          maximum: 5
          minimum: 0
        description:
          type: string
          example: The raw awesomeness
    CocktailCategory:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          type: string
          example: TIKI
    CocktailIngredients:
      type: array
      items:
        $ref: '#/components/schemas/CocktailIngredient'
    CocktailIngredient:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        quantity:
          type: string
          example: 1/2
        created:
          $ref: '#/components/schemas/DateTime'
        updated:
          $ref: '#/components/schemas/DateTime'
    Unit:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          type: string
          example: cl
    StringBase64:
      type: string
      format: byte
      example: Base64 string
    Ingredients:
      type: array
      items:
        $ref: '#/components/schemas/Ingredient'
    Ingredient:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
          example: Makers Mark
        producer:
          type: string
          example: Maker's Mark Distillery
        description:
          type: string
          example: Maker's Mark is a small-batch bourbon whiskey produced in Loretto, Kentucky, by Beam Suntory.
        created:
          $ref: '#/components/schemas/DateTime'
        updated:
          $ref: '#/components/schemas/DateTime'
    IngredientCategories:
      type: array
      items:
        $ref: '#/components/schemas/IngredientCategory'
    IngredientCategory:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          type: string
          example: WHISKEY
    MakingSteps:
      type: array
      items:
        $ref: '#/components/schemas/MakingStep'
    MakingStep:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        description:
          type: string
        position:
          type: integer
        created:
          $ref: '#/components/schemas/DateTime'
        updated:
          $ref: '#/components/schemas/DateTime'
        language:
          type: string
    Id:
      type: integer
      format: int64
      example: 42
    GlassType:
      type: string
      example: HIGHBALL
    Units:
      type: array
      items:
        $ref: '#/components/schemas/Unit'
    Glasses:
      type: array
      items:
        $ref: '#/components/schemas/Glass'
    406Error:
      type: object
      properties:
        attribute:
          type: string
          example: category
        errorMessage:
          type: string
          example: The category "APPLE" does not exist.
    404ErrorCocktailId:
      type: object
      properties:
        attribute:
          type: string
          example: cocktailId
        errorMessage:
          type: string
          example: The cocktail id "42" not exist.
    404ErrorCocktailIngredientId:
      type: object
      properties:
        attribute:
          type: string
          example: cocktailIngredientId
        errorMessage:
          type: string
          example: The cocktail ingredient id "42" not exist.
    404ErrorIngredientId:
      type: object
      properties:
        attribute:
          type: string
          example: ingredientId
        errorMessage:
          type: string
          example: The ingredient id "42" not exist.
    EmptyObject:
      type: object
    EmptyList:
      type: array
      items:
        $ref: '#/components/schemas/EmptyObject'
      example: []
    DateTime:
      type: string
      format: date-time

  parameters:
    cocktailId:
      name: cocktailId
      in: path
      description: Unique id of a cocktail
      required: true
      schema:
        $ref: '#/components/schemas/Id'
    cocktailIngredientId:
      name: cocktailIngredientId
      in: path
      description: Unique id of a cocktail ingredient
      required: true
      schema:
        $ref: '#/components/schemas/Id'
    ingredientId:
      name: ingredientId
      in: path
      description: Unique id of a ingredient
      required: true
      schema:
        $ref: '#/components/schemas/Id'
    filterCocktailsByNames:
      name: names
      in: query
      description: Filter all cocktails with the given names. Filter also on phonetic identical names. Case insensitive. Names linked by "or".
      required: false
      schema:
        type: string
        example: 'Whisky Sauer,Gin Tonic'
    filterCocktailsByCategories:
      name: categories
      in: query
      description: Filter all cocktails with the given categories. Case insensitive. Categories linked by "or".
      required: false
      schema:
        type: string
        example: Highball,Cocktail
    filterCocktailsByIngredients:
      name: ingredients
      in: query
      description: Filter all cocktails with the given ingredient names. Filter also on phonetic identical names. Case insensitive. Names linked by "and".
      required: false
      schema:
        type: string
        example: Makers Mark,Lemon,Eis
    filterCocktailsByIngredientCategories:
      name: ingredient_categories
      in: query
      description: Filter all cocktails with the given ingredient categories. Case insensitive. Categories linked by "or".
      required: false
      schema:
        type: string
        example: Whisky,Gin
    filterCocktailsByRatingGte:
      name: rating[gte]
      in: query
      description: Filter the cocktails with a rating greater than equal the given parameter.
      required: false
      schema:
        type: integer
        example: 2
    filterCocktailsByRatingLte:
      name: rating[lte]
      in: query
      description: Filter the cocktails with a rating less than equal the given parameter.
      required: false
      schema:
        type: integer
        example: 4
    filterCocktailsByGlass:
      name: glass
      in: query
      description: Filter the cocktails with the given glass.
      required: false
      schema:
        type: string
        example: Tumbler
    randomCocktails:
      name: random
      in: query
      description: Picks one random cocktail with the given filters.
      required: false
      schema:
        type: boolean
        example: true

  responses:
    204Object:
      description: No result found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptyObject'
    204List:
      description: No results found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptyList'
    404CocktailId:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404ErrorCocktailId'
    404CocktailIngredientId:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404ErrorCocktailIngredientId'
    404IngredientId:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404ErrorIngredientId'
    200Cocktail:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cocktail'
    200Cocktails:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cocktails'
    200CocktailIngredient:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CocktailIngredient'
    200CocktailIngredients:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CocktailIngredients'
    200Ingredient:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ingredient'
    200Ingredients:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ingredients'
    200MakingSteps:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MakingSteps'
    200Image:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Image'
    200Rating:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rating'
    200Glass:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Glass'
    200Glasses:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Glasses'
    200Unit:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unit'
    200Units:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Units'
    200CocktailCategory:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CocktailCategory'
    200IngredientsCategories:
      description: |-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IngredientCategories'
    406Cocktails:
      description: There is a error in the filter attributes.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/406Error'
tags:
  - name: cocktail
    description: Cocktail
  - name: cocktail ingredient
    description: Cocktail Ingredient
  - name: ingredient
    description: Ingredient
  - name: making step
    description: Making Step
  - name: image
    description: Image
  - name: rating
    description: Rating
  - name: glass
    description: Glass
  - name: unit
    description: Unit
  - name: category
    description: Category

